# -*- coding: utf-8 -*-
"""Predict-COVID19-chestxray_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19eoJZfHU4mc039koJ03unzwkqvZw4bRu
"""

from keras.models import load_model
import sys
import os
from keras.models import model_from_json
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import numpy as np

working_dir = "C:/Users/lykha/OneDrive/Documents/UiPath-COVID-19-Project/UiPath-COVID-19/"
json_file = open(working_dir + 'Best_weights/covid19_model.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
model = model_from_json(loaded_model_json)
model = load_model(working_dir + 'Best_weights/Covid_Multi.h5')
BATCH_SIZE = 10 
IMAGE_SIZE    = (150, 150)

test_datagen = ImageDataGenerator(rescale=1. / 255)
#test_dir="./Data/all/test"
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
print()
test_dir= str(input("Enter the path of your file: ")).split('.')[0]

eval_generator = test_datagen.flow_from_directory(
        test_dir,target_size=IMAGE_SIZE,
        batch_size=1,
        shuffle=True,
        seed=42,
        
        class_mode="categorical")
eval_generator.reset()    

x = model.evaluate_generator(eval_generator,
						   steps = np.ceil(len(eval_generator) / BATCH_SIZE),
                           use_multiprocessing = False,
                           verbose = 1,
                           workers=1
                           )


print('Test loss:' , x[0])
print('Test accuracy:',x[1])

import pandas as pd
pred=model.predict_generator(eval_generator,verbose=1, steps = 27)

predicted_class_indices=np.argmax(pred,axis=1)
labels = {0: 'covid', 1: 'normal', 2: 'pneumonia_bac'}
predictions = [labels[k] for k in predicted_class_indices]
acc=np.max(pred, axis=1)*100
loss=np.min(pred, axis=1)*100
filenames=eval_generator.filenames
results=pd.DataFrame({"Filename":filenames,
                      "Predictions":predictions,
                      "Accuracy": acc,
                      "Loss": loss})
results["Filename"] = results["Filename"].apply(lambda x: str(x).split('\\')[1])
results["Predictions"] = results["Predictions"].apply(lambda x: str(x).upper())
results["Accuracy"] = results["Accuracy"].apply(lambda x: str(round(x, 2))+"%")
results["Loss"] = results["Loss"].apply(lambda x: str(round(x, 2))+"%")
results.to_csv(working_dir +"Output_Image/Output_pred.csv")

import matplotlib.pyplot as plt
from tensorflow.python.keras.preprocessing.image import ImageDataGenerator, img_to_array, load_img

files = results["Filename"]
predictions = results["Predictions"]
acc = results["Accuracy"] 
loss = results["Loss"]
f, ax = plt.subplots(4,3, figsize=(40, 20))
for i in range(len(files)-15):
  img_path = eval_generator.filepaths[i]
  img = load_img(img_path, target_size=(150, 150))
  file_name = files[i]
  ax.ravel()[i].imshow(img, cmap='gray')
  ax.ravel()[i].set_title(predictions[i]+"-Acc: "+acc[i]+"-Loss: "+loss[i], fontsize=20)
  plt.tight_layout()
plt.savefig(working_dir + 'Output_Image/test_batch_2.png')